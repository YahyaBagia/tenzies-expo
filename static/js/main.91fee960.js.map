{"version":3,"file":"static/js/main.91fee960.js","mappings":"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","sources":["src/serviceWorkerRegistration.js","src/common/GlobalState.js","src/common/Utils.js","src/common/ScoreUtils.js","src/common/CustomHooks.js","src/common/Const.js","src/components/Dice.jsx","src/components/GameButton.jsx","src/components/Separator.jsx","src/ScoresModal.jsx","src/SettingsModal.jsx","src/Main.jsx","App.jsx","index.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalState } from \"react-hooks-global-state\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const DiceTypes = [\"Digit\", \"Symbol\"];\n\nconst initialState = {\n  noOfDices: 12,\n  soundEnabled: true,\n  diceType: DiceTypes[0],\n};\n\nconst CACHED_STATE = \"CACHED_STATE\";\n\nconst { useGlobalState, getGlobalState, setGlobalState } =\n  createGlobalState(initialState);\n\n//#region - Cachable Global State\n\nexport const SetNoOfDices = (value) => {\n  setGlobalState(\"noOfDices\", (v) => value);\n  CacheStateLocally();\n};\n\nexport const SetSoundEnabled = (value) => {\n  setGlobalState(\"soundEnabled\", (v) => value);\n  CacheStateLocally();\n};\n\nexport const SetDiceType = (value) => {\n  setGlobalState(\"diceType\", (v) => value);\n  CacheStateLocally();\n};\n\n//#endregion\n\n//#region - Persisting Global State\n\nconst CacheStateLocally = async () => {\n  let cacheableState = {\n    noOfDices: getGlobalState(\"noOfDices\"),\n    soundEnabled: getGlobalState(\"soundEnabled\"),\n    diceType: getGlobalState(\"diceType\"),\n  };\n  cacheableState = JSON.stringify(cacheableState);\n  await AsyncStorage.setItem(CACHED_STATE, cacheableState);\n};\n\nexport const LoadLocallyCachedState = async () => {\n  let currentState = { ...initialState };\n  const stateKeys = Object.keys(initialState);\n  const strLocallyCachedState = await AsyncStorage.getItem(CACHED_STATE);\n  const locallyCachedState = JSON.parse(strLocallyCachedState);\n  if (locallyCachedState !== null || locallyCachedState !== undefined) {\n    currentState = { ...currentState, ...locallyCachedState };\n  }\n\n  for (const key of stateKeys) setGlobalState(key, (v) => currentState[key]);\n\n  return true;\n};\n\n//#endregion\n\nexport { useGlobalState, getGlobalState, setGlobalState };\n","import { Platform } from \"react-native\";\nimport { Audio } from \"expo-av\";\n\nimport { getGlobalState } from \"./GlobalState\";\n\nexport default class Utils {\n  static SplitArray = (flatArray, numCols) => {\n    const newArray = [];\n    for (let c = 0; c < numCols; c++) {\n      newArray.push([]);\n    }\n    for (let i = 0; i < flatArray.length; i++) {\n      const mod = i % numCols;\n      newArray[mod].push(flatArray[i]);\n    }\n    return newArray;\n  };\n\n  static Sleep = (seconds = 1) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, seconds * 1000);\n    });\n  };\n\n  static PlaySound = async (audio) => {\n    try {\n      const soundEnabled = getGlobalState(\"soundEnabled\");\n      if (!soundEnabled) return;\n      const { sound } = await Audio.Sound.createAsync(audio);\n      await sound.playAsync();\n    } catch {}\n  };\n\n  static IsOnWeb = () => Platform.OS === \"web\";\n\n  //#region\n  static GetTimerText = ({ tHours, tMinutes, tSeconds }) => {\n    const twoDigitNumber = (n) => (\"0\" + n).slice(-2);\n    let formattedTime =\n      twoDigitNumber(tMinutes) + \":\" + twoDigitNumber(tSeconds);\n    if (tHours > 0) {\n      formattedTime = twoDigitNumber(tHours) + \":\" + formattedTime;\n    }\n    return formattedTime;\n  };\n\n  static GetTotalSecondsOfTimer = ({ tHours, tMinutes, tSeconds }) => {\n    const hSeconds = Number(tHours) * 3600;\n    const mSeconds = Number(tMinutes) * 60;\n    const sSeconds = Number(tSeconds);\n    const totalSeconds = hSeconds + mSeconds + sSeconds;\n    return totalSeconds;\n  };\n  //#endregion\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Crypto from \"expo-crypto\";\n\nimport Utils from \"./Utils\";\n\nconst SCORE_STORAGE_KEY = \"SCORES\";\n\nexport default class ScoreUtils {\n  static GetAllScores = async () => {\n    let strScores = await AsyncStorage.getItem(SCORE_STORAGE_KEY);\n    if (!strScores) strScores = \"[]\";\n    return JSON.parse(strScores);\n  };\n\n  static AddNewScore = async (\n    time,\n    noOfRolls,\n    selectedDice,\n    diceType,\n    noOfDices\n  ) => {\n    const scoreObj = {\n      id: Crypto.randomUUID(),\n      time,\n      noOfRolls,\n      selectedDice,\n      totalSeconds: Utils.GetTotalSecondsOfTimer(time),\n      diceType,\n      noOfDices,\n    };\n    const allScores = await ScoreUtils.GetAllScores();\n    allScores.push(scoreObj);\n    await ScoreUtils.SaveScores(allScores);\n  };\n\n  static DeleteScore = async (scoreObj) => {\n    const allScores = await ScoreUtils.GetAllScores();\n    const newScores = allScores.filter(({ id }) => id !== scoreObj.id);\n    await ScoreUtils.SaveScores(newScores);\n  };\n\n  static ClearAllScores = async () => {\n    await ScoreUtils.SaveScores([]);\n  };\n\n  static SaveScores = async (arrScores) => {\n    const strScores = JSON.stringify(arrScores);\n    await AsyncStorage.setItem(SCORE_STORAGE_KEY, strScores);\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\nconst useUpdateEffect = (effect, dependencies = []) => {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      return effect();\n    }\n  }, dependencies);\n};\n\nexport default useUpdateEffect;\n","export const Colors = {\n  Primary: \"#F1C232\",\n  Accent: \"#596183\",\n  Highlight: \"#F29432\",\n  ButtonBG: \"#0A2038\",\n};\n\nexport const Sounds = {\n  Roll_Dice: require(\"../../assets/Sounds/Roll_Dice.mp3\"),\n  Dice_Click: require(\"../../assets/Sounds/Dice_Click.wav\"),\n  Game_Finished: require(\"../../assets/Sounds/Game_Finished.wav\"),\n};\n\nexport const Images = {\n  Splash: require(\"../../assets/splash.png\"),\n};\n\nexport const FontNames = {\n  MouldyCheese: \"MouldyCheese\",\n};\n","import { View } from \"react-native\";\nimport { Text, TouchableRipple } from \"react-native-paper\";\n\nimport { DiceTypes } from \"../common/GlobalState\";\nimport { Colors, FontNames } from \"../common/Const\";\n\nconst Dice = ({ title, isSelected, onPress, isCompact, diceType }) => {\n  const diceSize = isCompact ? 40 : 70;\n  return (\n    <View style={{ overflow: \"hidden\", borderRadius: 12 }}>\n      <TouchableRipple\n        onPress={onPress}\n        style={{\n          borderRadius: 12,\n          backgroundColor: isSelected ? Colors.Highlight : \"white\",\n          borderColor: isSelected ? Colors.ButtonBG : Colors.Highlight,\n          borderWidth: 3,\n          height: diceSize,\n          width: diceSize,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {diceType === DiceTypes[0] ? (\n          <DiceDigit title={title} isCompact={isCompact} />\n        ) : (\n          <DiceSymbol title={title} isCompact={isCompact} />\n        )}\n      </TouchableRipple>\n    </View>\n  );\n};\n\nconst DiceDigit = ({ title, isCompact }) => {\n  const diceFontSize = isCompact ? 25 : 45;\n  return (\n    <Text\n      style={{ fontSize: diceFontSize, fontFamily: FontNames.MouldyCheese }}\n      selectable={false}\n    >\n      {title}\n    </Text>\n  );\n};\n\nconst DiceSymbol = ({ title, isCompact }) => {\n  const dotSize = isCompact ? 8 : 15;\n\n  const one = <DiceDot dotSize={dotSize} />;\n  const two = (\n    <>\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", top: 0, left: 0 }}\n      />\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", bottom: 0, right: 0 }}\n      />\n    </>\n  );\n  const two_mirror = (\n    <>\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", top: 0, right: 0 }}\n      />\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", bottom: 0, left: 0 }}\n      />\n    </>\n  );\n  const two_middle = (\n    <>\n      <DiceDot dotSize={dotSize} style={{ position: \"absolute\", right: 0 }} />\n      <DiceDot dotSize={dotSize} style={{ position: \"absolute\", left: 0 }} />\n    </>\n  );\n  const three = (\n    <>\n      {one}\n      {two}\n    </>\n  );\n  const four = (\n    <>\n      {two}\n      {two_mirror}\n    </>\n  );\n  const five = (\n    <>\n      {one}\n      {four}\n    </>\n  );\n  const six = (\n    <>\n      {four}\n      {two_middle}\n    </>\n  );\n\n  return (\n    <View\n      style={{\n        height: \"90%\",\n        width: \"90%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {title === \"1\" && one}\n      {title === \"2\" && two}\n      {title === \"3\" && three}\n      {title === \"4\" && four}\n      {title === \"5\" && five}\n      {title === \"6\" && six}\n    </View>\n  );\n};\n\nconst DiceDot = ({ dotSize, style }) => (\n  <View\n    style={{\n      borderRadius: dotSize / 2,\n      height: dotSize,\n      width: dotSize,\n      backgroundColor: Colors.ButtonBG,\n      ...style,\n    }}\n  />\n);\n\nexport default Dice;\n","import { View } from \"react-native\";\nimport { Text, TouchableRipple } from \"react-native-paper\";\n\nimport { Colors, FontNames } from \"../common/Const\";\n\nconst GameButton = ({ title, onPress, invertedColors = false }) => {\n  return (\n    <View\n      style={{\n        overflow: \"hidden\",\n        borderRadius: 12,\n        marginTop: 12,\n        width: \"100%\",\n        maxWidth: 615,\n        alignSelf: \"center\",\n      }}\n    >\n      <TouchableRipple\n        style={{\n          borderRadius: 12,\n          backgroundColor: invertedColors ? Colors.Highlight : Colors.ButtonBG,\n          borderWidth: 3,\n          borderColor: invertedColors ? Colors.ButtonBG : \"transparent\",\n          height: 60,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={onPress}\n      >\n        <Text\n          style={{\n            color: invertedColors ? Colors.ButtonBG : \"white\",\n            fontSize: 30,\n            fontFamily: FontNames.MouldyCheese,\n            letterSpacing: 2,\n          }}\n          selectable={false}\n        >\n          {title}\n        </Text>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nexport default GameButton;\n","import { Divider } from \"react-native-paper\";\n\nconst Separator = () => (\n  <Divider\n    style={{ marginVertical: 12, backgroundColor: \"rgba(0,0,0,0.12)\" }}\n  />\n);\n\nexport default Separator;\n","import { useEffect, useState } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport {\n  Dialog,\n  Portal,\n  Text,\n  Title,\n  TouchableRipple,\n} from \"react-native-paper\";\nimport SegmentedControlTab from \"react-native-segmented-control-tab\";\n\nimport Dice from \"./components/Dice\";\nimport Separator from \"./components/Separator\";\n\nimport Utils from \"./common/Utils\";\nimport ScoreUtils from \"./common/ScoreUtils\";\nimport { Colors, FontNames } from \"./common/Const\";\nimport { useGlobalState } from \"./common/GlobalState\";\n\nconst arrNoOfDices = [4, 6, 8, 10, 12];\n\nconst ScoresModal = ({ isVisible, onDismiss }) => {\n  const [diceType] = useGlobalState(\"diceType\");\n\n  const [scores, setScores] = useState([]);\n  const [selectedNoOfDices, setSelectedNoOfDices] = useState(\n    arrNoOfDices[arrNoOfDices.length - 1]\n  );\n\n  useEffect(() => {\n    if (isVisible) {\n      loadScores();\n    }\n  }, [isVisible]);\n\n  const loadScores = async () => {\n    const s = await ScoreUtils.GetAllScores();\n    const sortedScores = s.sort((a, b) => a.totalSeconds - b.totalSeconds);\n    setScores(sortedScores);\n  };\n\n  const onPressClearScoreboard = async () => {\n    await ScoreUtils.ClearAllScores();\n    await loadScores();\n  };\n\n  return (\n    <Portal>\n      <Dialog\n        visible={isVisible}\n        onDismiss={onDismiss}\n        style={{\n          maxWidth: 470,\n          maxHeight: 680,\n          width: \"92%\",\n          alignSelf: \"center\",\n          backgroundColor: Colors.Primary,\n        }}\n      >\n        <Dialog.ScrollArea style={{ borderColor: \"transparent\" }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Title\n              style={{\n                flex: 1,\n                fontSize: 26,\n                fontFamily: FontNames.MouldyCheese,\n                textAlign: \"center\",\n              }}\n            >\n              Scoreboard\n            </Title>\n          </View>\n          <Separator />\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Dice title={\"5\"} isCompact diceType={diceType} />\n            <View style={{ flex: 1, marginHorizontal: 4 }}>\n              <SegmentedControlTab\n                values={arrNoOfDices.map((v) => `${v}`)}\n                selectedIndex={arrNoOfDices.indexOf(selectedNoOfDices)}\n                onTabPress={(i) => setSelectedNoOfDices(arrNoOfDices[i])}\n                borderRadius={12}\n                tabStyle={{ borderWidth: 3, borderColor: Colors.Highlight }}\n                activeTabStyle={{ backgroundColor: Colors.ButtonBG }}\n                tabTextStyle={{\n                  color: Colors.ButtonBG,\n                  fontFamily: FontNames.MouldyCheese,\n                  fontSize: 20,\n                }}\n              />\n            </View>\n            <Dice title={\"5\"} isCompact diceType={diceType} />\n          </View>\n          <FlatList\n            data={scores.filter(\n              ({ noOfDices }) => noOfDices === selectedNoOfDices\n            )}\n            renderItem={({ item, index }) => (\n              <ScoreItem scoreObj={item} index={index} />\n            )}\n            keyExtractor={({ id }) => id}\n            ListHeaderComponent={() => (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  marginVertical: 4,\n                  borderRadius: 12,\n                  borderWidth: 3,\n                  borderColor: Colors.ButtonBG,\n                  padding: 2,\n                }}\n              >\n                <ScoreItemText v={\"#\"} halfWidth />\n                <ScoreItemText v={\"Time\"} />\n                <ScoreItemText v={\"Rolls\"} />\n                <ScoreItemText v={\"Dice\"} />\n              </View>\n            )}\n          />\n        </Dialog.ScrollArea>\n        <Dialog.Actions>\n          <View\n            style={{\n              overflow: \"hidden\",\n              borderRadius: 12,\n              width: \"100%\",\n              maxWidth: 615,\n              alignSelf: \"center\",\n            }}\n          >\n            <TouchableRipple\n              style={{\n                borderRadius: 12,\n                backgroundColor: Colors.ButtonBG,\n                height: 46,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={onPressClearScoreboard}\n            >\n              <Text\n                style={{\n                  color: \"white\",\n                  fontSize: 22,\n                  fontFamily: FontNames.MouldyCheese,\n                }}\n              >\n                Clear Scoreboard\n              </Text>\n            </TouchableRipple>\n          </View>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst ScoreItem = ({ scoreObj, index }) => {\n  const { id, time, noOfRolls, selectedDice, diceType } = scoreObj;\n  const timeTaken = Utils.GetTimerText(time);\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginVertical: 4,\n        borderRadius: 12,\n        borderWidth: 3,\n        borderColor: Colors.ButtonBG,\n        padding: 2,\n      }}\n    >\n      <ScoreItemText v={index + 1} halfWidth />\n      <ScoreItemText v={timeTaken} />\n      <ScoreItemText v={noOfRolls} />\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <Dice diceType={diceType} isCompact title={selectedDice} />\n      </View>\n    </View>\n  );\n};\n\nconst ScoreItemText = ({ v, halfWidth = false }) => (\n  <Text\n    style={{\n      flex: halfWidth ? 0.5 : 1,\n      textAlign: \"center\",\n      fontFamily: FontNames.MouldyCheese,\n      fontSize: 22,\n      marginHorizontal: 1,\n    }}\n  >\n    {v}\n  </Text>\n);\n\nexport default ScoresModal;\n","import { View } from \"react-native\";\nimport { Dialog, IconButton, Portal, Text, Title } from \"react-native-paper\";\nimport SegmentedControlTab from \"react-native-segmented-control-tab\";\n\nimport Dice from \"./components/Dice\";\nimport Separator from \"./components/Separator\";\n\nimport { Colors, FontNames } from \"./common/Const\";\nimport {\n  DiceTypes,\n  useGlobalState,\n  SetNoOfDices,\n  SetDiceType,\n  SetSoundEnabled,\n} from \"./common/GlobalState\";\n\nconst SettingsModal = ({ isVisible, onDismiss }) => {\n  const [noOfDices] = useGlobalState(\"noOfDices\");\n  const [diceType] = useGlobalState(\"diceType\");\n  const [soundEnabled] = useGlobalState(\"soundEnabled\");\n\n  const decreaseNoOfDices = () => {\n    if (noOfDices > 4) {\n      SetNoOfDices(noOfDices - 2);\n    }\n  };\n\n  const increaseNoOfDices = () => {\n    if (noOfDices < 12) {\n      SetNoOfDices(noOfDices + 2);\n    }\n  };\n\n  return (\n    <Portal>\n      <Dialog\n        visible={isVisible}\n        onDismiss={onDismiss}\n        style={{\n          maxWidth: 470,\n          width: \"85%\",\n          alignSelf: \"center\",\n          backgroundColor: Colors.Primary,\n        }}\n      >\n        <Dialog.Content>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Title\n              style={{\n                flex: 1,\n                fontSize: 26,\n                fontFamily: FontNames.MouldyCheese,\n                textAlign: \"center\",\n                marginBottom: 12,\n              }}\n            >\n              Settings\n            </Title>\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 21,\n                fontFamily: FontNames.MouldyCheese,\n              }}\n            >\n              Dice Type\n            </Text>\n            {DiceTypes.map((dT, i) => (\n              <View key={dT} style={{ flexDirection: \"row\" }}>\n                <Dice\n                  title={\"5\"}\n                  isSelected={diceType === dT}\n                  onPress={() => SetDiceType(dT)}\n                  isCompact\n                  diceType={dT}\n                />\n                {i !== DiceTypes.length - 1 && <View style={{ width: 12 }} />}\n              </View>\n            ))}\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 21, fontFamily: FontNames.MouldyCheese }}>\n              Sound\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n              <SegmentedControlTab\n                values={[\"On\", \"Off\"]}\n                selectedIndex={soundEnabled ? 0 : 1}\n                onTabPress={(i) => SetSoundEnabled(i === 0)}\n                borderRadius={12}\n                tabStyle={{ borderWidth: 3, borderColor: Colors.Highlight }}\n                tabsContainerStyle={{ width: 92 }}\n                activeTabStyle={{ backgroundColor: Colors.ButtonBG }}\n                tabTextStyle={{\n                  color: Colors.ButtonBG,\n                  fontFamily: FontNames.MouldyCheese,\n                  fontSize: 20,\n                }}\n              />\n            </View>\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 21, fontFamily: FontNames.MouldyCheese }}>\n              No. of Dices\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n              <View\n                style={{\n                  borderWidth: 3,\n                  borderColor: Colors.Highlight,\n                  borderRadius: 12,\n                  backgroundColor: \"white\",\n                  flexDirection: \"row\",\n                  width: 92,\n                  height: 42,\n                  alignItems: \"center\",\n                  overflow: \"hidden\",\n                }}\n              >\n                <StepperButton icon={\"minus\"} onPress={decreaseNoOfDices} />\n                <Text\n                  style={{\n                    flex: 1.1,\n                    textAlign: \"center\",\n                    fontFamily: FontNames.MouldyCheese,\n                    fontSize: 20,\n                  }}\n                >\n                  {noOfDices}\n                </Text>\n                <StepperButton icon={\"plus\"} onPress={increaseNoOfDices} />\n              </View>\n            </View>\n          </View>\n        </Dialog.Content>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default SettingsModal;\n\nconst StepperButton = ({ icon, onPress }) => (\n  <View\n    style={{\n      flex: 1,\n      backgroundColor: Colors.ButtonBG,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n    }}\n  >\n    <IconButton\n      icon={icon}\n      size={28}\n      onPress={onPress}\n      style={{ margin: 0 }}\n      iconColor={Colors.Highlight}\n    />\n  </View>\n);\n","import { useState, useRef, useEffect } from \"react\";\nimport { View, Dimensions } from \"react-native\";\nimport { IconButton, Text, TouchableRipple } from \"react-native-paper\";\nimport ConfettiCannon from \"react-native-confetti-cannon\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport * as Crypto from \"expo-crypto\";\nimport { isMobile as isRunningOnMobileDevice } from 'react-device-detect';\n\nimport Utils from \"./common/Utils\";\nimport ScoreUtils from \"./common/ScoreUtils\";\nimport useUpdateEffect from \"./common/CustomHooks\";\nimport { useGlobalState } from \"./common/GlobalState\";\nimport { Colors, FontNames, Sounds } from \"./common/Const\";\n\nimport Dice from \"./components/Dice\";\nimport GameButton from \"./components/GameButton\";\n\nimport ScoresModal from \"./ScoresModal\";\nimport SettingsModal from \"./SettingsModal\";\n\nconst Main = () => {\n  const [diceType] = useGlobalState(\"diceType\");\n  const [noOfDices] = useGlobalState(\"noOfDices\");\n\n  const CreateDice = () => ({\n    title: `${Math.ceil(Math.random() * 6)}`,\n    isSelected: false,\n    id: Crypto.randomUUID(),\n  });\n\n  const GenerateNewDices = () => [...Array(noOfDices)].map(() => CreateDice());\n\n  const {\n    seconds: tSeconds,\n    minutes: tMinutes,\n    hours: tHours,\n    start: startTimer,\n    pause: pauseTimer,\n    reset: resetTimer,\n  } = useStopwatch({});\n\n  const [noOfRows, setNoOfRows] = useState(2);\n  const [allDices, setAllDices] = useState(GenerateNewDices());\n  const [noOfRolls, setNoOfRolls] = useState(0);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [isScoresVisible, setIsScoresVisible] = useState(false);\n  const [missedRolls, setMissedRolls] = useState(0);\n  const [missedDices, setMissedDices] = useState(0);\n\n  const leftConfettiRef = useRef();\n  const rightConfettiRef = useRef();\n\n  const getSelectedDices = () => allDices.filter((die) => die.isSelected);\n\n  useEffect(() => {\n    const selectedDices = getSelectedDices();\n    if (selectedDices.length === 0) {\n      resetNoOfRolls();\n      resetTimer();\n      pauseTimer();\n    } else if (selectedDices.length === 1) {\n      resetTimer();\n      startTimer();\n    } else if (CheckIfAllDicesAreTheSame()) {\n      Utils.PlaySound(Sounds.Game_Finished);\n      startConfettis();\n      pauseTimer();\n      ScoreUtils.AddNewScore(\n        { tHours, tMinutes, tSeconds },\n        noOfRolls,\n        selectedDices[0].title,\n        diceType,\n        noOfDices\n      );\n    }\n  }, [allDices]);\n\n  useUpdateEffect(() => {\n    setAllDices(GenerateNewDices());\n    pauseTimer();\n    resetTimer();\n    calculateNoOfRows();\n  }, [noOfDices]);\n\n  const increaseNoOfRolls = () => {\n    setNoOfRolls((oldNoOfRolls) => oldNoOfRolls + 1);\n  };\n\n  const resetNoOfRolls = () => setNoOfRolls(0);\n\n  const startConfettis = () => {\n    leftConfettiRef.current.start();\n    rightConfettiRef.current.start();\n  };\n\n  const onPress_NewGame_or_Roll = () => {\n    CheckIfAllDicesAreTheSame() ? onPressNewGame() : onPressRoll();\n  };\n\n  const onPressRoll = () => {\n    Utils.PlaySound(Sounds.Roll_Dice);\n    const selectedDices = getSelectedDices();\n    if (selectedDices.length > 0) {\n      increaseNoOfRolls();\n\n      const { title } = selectedDices[0];\n      const foundUnselected = allDices.filter(\n        ({ title: t, isSelected }) => t === title && !isSelected\n      );\n      if (foundUnselected.length > 0) {\n        setMissedRolls(missedRolls + 1);\n        setMissedDices(missedDices + foundUnselected.length);\n      }\n    }\n    setAllDices((oldDice) =>\n      oldDice.map((die) => (die.isSelected ? die : CreateDice()))\n    );\n  };\n\n  const onPressNewGame = () => {\n    setMissedRolls(0);\n    setMissedDices(0);\n    setAllDices(GenerateNewDices());\n    resetTimer();\n  };\n\n  const onPressDie = ({ id, title }) => {\n    if (CheckIfAllDicesAreTheSame()) return;\n    Utils.PlaySound(Sounds.Dice_Click);\n    const [firstSelectedDice] = allDices.filter(({ isSelected }) => isSelected);\n    if (firstSelectedDice) {\n      if (title !== firstSelectedDice.title) return;\n    }\n    setAllDices((oldDices) =>\n      oldDices.map((die) =>\n        die.id === id ? { ...die, isSelected: !die.isSelected } : die\n      )\n    );\n  };\n\n  const CheckIfAllDicesAreTheSame = () => {\n    const allSelected = allDices.every((die) => die.isSelected);\n    const firstValue = allDices[0].title;\n    const allSame = allDices.every((die) => die.title === firstValue);\n    return allSelected && allSame;\n  };\n\n  const GetDiceElements = () => {\n    const diceElements = allDices.map(({ id, title, isSelected }, index) => (\n      <Dice\n        key={id}\n        title={title}\n        isSelected={isSelected}\n        onPress={() => onPressDie(allDices[index])}\n        diceType={diceType}\n      />\n    ));\n\n    let splittedArrays = [];\n    if (Utils.IsOnWeb()) {\n      splittedArrays = Utils.SplitArray(diceElements, 2);\n    } else {\n      splittedArrays = Utils.SplitArray(diceElements, 4);\n    }\n    splittedArrays = Utils.SplitArray(diceElements, noOfRows);\n    return splittedArrays;\n  };\n\n  const onLayoutRootView = (l) => {\n    const { width } = l.nativeEvent.layout;\n    calculateNoOfRows(width);\n  };\n\n  const calculateNoOfRows = (width = Dimensions.get(\"window\").width) => {\n    if (noOfDices === 10) {\n      if (width <= 480) {\n        setNoOfRows(5);\n      } else {\n        setNoOfRows(2);\n      }\n      return;\n    }\n    if (noOfDices === 4 || noOfDices === 6) {\n      setNoOfRows(2);\n    } else if (width <= 480) {\n      setNoOfRows(4);\n    } else if (width > 720) {\n      setNoOfRows(2);\n    }\n  };\n\n  if (Utils.IsOnWeb()) {\n    const { useHotkeys } = require(\"react-hotkeys-hook\");\n    useHotkeys(\"space\", onPress_NewGame_or_Roll);\n  }\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: Colors.Primary,\n        overflow: \"hidden\",\n      }}\n      onLayout={onLayoutRootView}\n    >\n      <View\n        style={{\n          justifyContent: \"center\",\n          width: \"90%\",\n        }}\n      >\n        <View style={{ margin: 12, alignItems: \"center\" }}>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontFamily: FontNames.MouldyCheese,\n              fontSize: 44,\n            }}\n          >\n            Tenzies\n          </Text>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontFamily: FontNames.MouldyCheese,\n              fontSize: 18,\n            }}\n          >\n            Roll until all dice are the same.{\"\\n\"}Click each die to freeze it\n            at its current value between rolls.\n            {isRunningOnMobileDevice === false && \"\\nPress Space Bar (⎵) to roll the dices.\"}\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 12,\n              width: \"100%\",\n              maxWidth: 480,\n            }}\n          >\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 24,\n                textAlign: \"center\",\n                fontFamily: FontNames.MouldyCheese,\n              }}\n            >\n              {Utils.GetTimerText({ tHours, tMinutes, tSeconds })}\n            </Text>\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 24,\n                textAlign: \"center\",\n                fontFamily: FontNames.MouldyCheese,\n              }}\n            >\n              {noOfRolls} Rolls\n            </Text>\n          </View>\n        </View>\n\n        <View style={{ alignItems: \"center\" }}>\n          {GetDiceElements().map((dices, i) => (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n                marginVertical: 8,\n                minWidth: Utils.IsOnWeb() ? 400 : \"100%\",\n                maxWidth: 650,\n                width: \"100%\",\n              }}\n              key={`${i}`}\n            >\n              {dices}\n            </View>\n          ))}\n        </View>\n\n        <GameButton\n          title={CheckIfAllDicesAreTheSame() ? \"New Game\" : \"ROLL\"}\n          onPress={onPress_NewGame_or_Roll}\n          invertedColors={CheckIfAllDicesAreTheSame()}\n        />\n\n        <View style={{ alignItems: \"center\" }}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 12,\n              width: \"100%\",\n              maxWidth: 480,\n            }}\n          >\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 22,\n                textAlign: \"center\",\n                fontFamily: FontNames.MouldyCheese,\n              }}\n            >\n              {missedDices}\n              {\"\\n\"}\n              <Text\n                style={{\n                  fontSize: 18,\n                  textAlign: \"center\",\n                  fontFamily: FontNames.MouldyCheese,\n                }}\n              >\n                Missed Dices\n              </Text>\n            </Text>\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 22,\n                textAlign: \"center\",\n                fontFamily: FontNames.MouldyCheese,\n              }}\n            >\n              {missedRolls}\n              {\"\\n\"}\n              <Text\n                style={{\n                  fontSize: 18,\n                  textAlign: \"center\",\n                  fontFamily: FontNames.MouldyCheese,\n                }}\n              >\n                Missed Rolls\n              </Text>\n            </Text>\n          </View>\n        </View>\n      </View>\n      {CheckIfAllDicesAreTheSame() && (\n        <>\n          <ConfettiCannon\n            count={50}\n            origin={{ x: 100, y: 100 }}\n            autoStart={true}\n            ref={leftConfettiRef}\n            onAnimationEnd={startConfettis}\n            fadeOut={true}\n          />\n          <ConfettiCannon\n            count={50}\n            origin={{ x: Dimensions.get(\"window\").width - 100, y: 100 }}\n            autoStart={true}\n            ref={rightConfettiRef}\n            onAnimationEnd={startConfettis}\n            fadeOut={true}\n          />\n        </>\n      )}\n      <TouchableRipple\n        style={{\n          position: \"absolute\",\n          top: 44,\n          right: -3,\n          backgroundColor: Colors.Highlight,\n          borderTopLeftRadius: 12,\n          borderBottomLeftRadius: 12,\n          borderWidth: 3,\n          borderColor: Colors.ButtonBG,\n          overflow: \"hidden\",\n        }}\n        onPress={() => setIsSettingsVisible(true)}\n      >\n        <IconButton\n          icon={\"cog\"}\n          iconColor={Colors.ButtonBG}\n          style={{ margin: 0, marginHorizontal: 12 }}\n          size={30}\n        />\n      </TouchableRipple>\n      <TouchableRipple\n        style={{\n          position: \"absolute\",\n          top: 44,\n          left: -3,\n          backgroundColor: Colors.Highlight,\n          borderTopRightRadius: 12,\n          borderBottomRightRadius: 12,\n          borderWidth: 3,\n          borderColor: Colors.ButtonBG,\n          overflow: \"hidden\",\n        }}\n        onPress={() => setIsScoresVisible(true)}\n      >\n        <IconButton\n          icon={\"trophy\"}\n          iconColor={Colors.ButtonBG}\n          style={{ margin: 0, marginHorizontal: 12 }}\n          size={30}\n        />\n      </TouchableRipple>\n      <ScoresModal\n        isVisible={isScoresVisible}\n        onDismiss={() => setIsScoresVisible(false)}\n      />\n      <SettingsModal\n        isVisible={isSettingsVisible}\n        onDismiss={() => setIsSettingsVisible(false)}\n      />\n    </View>\n  );\n};\n\nexport default Main;\n","import { useEffect, useState } from \"react\";\nimport { View, Image } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts } from 'expo-font';\n\nimport Main from \"./src/Main\";\nimport Utils from \"./src/common/Utils\";\nimport { Colors, FontNames, Images } from \"./src/common/Const\";\nimport { LoadLocallyCachedState } from \"./src/common/GlobalState\";\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: Colors.Primary,\n    accent: Colors.Accent,\n  },\n};\n\nSplashScreen.preventAutoHideAsync();\n\nconst App = () => {\n  const [isGlobalStateLoaded, setIsGlobalStateLoaded] = useState(false);\n\n  const [fontsLoaded] = useFonts({\n    [FontNames.MouldyCheese]: require('./assets/Fonts/MouldyCheeseRegular.ttf'),\n  });\n\n  useEffect(() => {\n    (async () => {\n      await LoadLocallyCachedState();\n      await Utils.Sleep(2);\n      setIsGlobalStateLoaded(true)\n      await SplashScreen.hideAsync();\n    })()\n  }, [])\n\n  if (!isGlobalStateLoaded || !fontsLoaded)\n    return (\n      <View style={{ flex: 1, backgroundColor: Colors.Primary }}>\n        <Image\n          source={Images.Splash}\n          style={{ height: \"100%\", width: \"100%\" }}\n          resizeMode={\"contain\"}\n        />\n      </View>\n    );\n\n  return (\n    <PaperProvider theme={theme}>\n      <Main />\n      <StatusBar style=\"auto\" />\n    </PaperProvider>\n  )\n};\n\nexport default App;\n","import { registerRootComponent } from \"expo\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport App from \"./App\";\n\nregisterRootComponent(App);\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/tenzies-expo/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [259], () => (__webpack_require__(3383)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DiceTypes","initialState","noOfDices","soundEnabled","diceType","CACHED_STATE","_createGlobalState","createGlobalState","useGlobalState","getGlobalState","setGlobalState","SetNoOfDices","value","v","CacheStateLocally","_ref","_asyncToGenerator","cacheableState","JSON","stringify","AsyncStorage","apply","arguments","LoadLocallyCachedState","_ref2","currentState","_objectSpread","stateKeys","Object","keys","strLocallyCachedState","locallyCachedState","parse","undefined","_loop","key","Utils","_createClass","_classCallCheck","SplitArray","flatArray","numCols","newArray","c","push","i","length","Sleep","seconds","Promise","resolve","reject","setTimeout","PlaySound","audio","sound","Audio","playAsync","_unused","_x","IsOnWeb","Platform","GetTimerText","tHours","tMinutes","tSeconds","twoDigitNumber","n","slice","formattedTime","GetTotalSecondsOfTimer","_ref3","Number","SCORE_STORAGE_KEY","ScoreUtils","GetAllScores","strScores","AddNewScore","time","noOfRolls","selectedDice","scoreObj","id","Crypto","randomUUID","totalSeconds","allScores","SaveScores","_x2","_x3","_x4","_x5","DeleteScore","newScores","filter","_ref4","_x6","ClearAllScores","_ref6","arrScores","_x7","effect","dependencies","isInitialMount","useRef","useEffect","current","Colors","Sounds","Roll_Dice","require","Dice_Click","Game_Finished","Images","Splash","FontNames","DiceDigit","title","diceFontSize","isCompact","_jsx","Text","style","fontSize","fontFamily","selectable","children","DiceSymbol","dotSize","one","DiceDot","two","_jsxs","_Fragment","position","top","left","bottom","right","two_mirror","two_middle","three","four","five","six","View","height","width","justifyContent","alignItems","borderRadius","backgroundColor","isSelected","onPress","diceSize","overflow","TouchableRipple","borderColor","borderWidth","_ref$invertedColors","invertedColors","marginTop","maxWidth","alignSelf","color","letterSpacing","Divider","marginVertical","arrNoOfDices","ScoreItem","_ref7","index","timeTaken","flexDirection","padding","ScoreItemText","halfWidth","flex","Dice","_ref8","_ref8$halfWidth","textAlign","marginHorizontal","isVisible","onDismiss","_useGlobalState","_slicedToArray","_useState","useState","_useState2","scores","setScores","_useState3","_useState4","selectedNoOfDices","setSelectedNoOfDices","loadScores","sortedScores","sort","a","b","onPressClearScoreboard","Portal","Dialog","visible","maxHeight","Title","Separator","SegmentedControlTab","values","map","selectedIndex","indexOf","onTabPress","tabStyle","activeTabStyle","tabTextStyle","FlatList","data","renderItem","_ref5","item","keyExtractor","ListHeaderComponent","_useGlobalState3","_useGlobalState5","marginBottom","dT","tabsContainerStyle","StepperButton","icon","IconButton","size","margin","iconColor","CreateDice","Math","ceil","random","GenerateNewDices","_toConsumableArray","Array","_useStopwatch","useStopwatch","minutes","hours","startTimer","start","pauseTimer","pause","resetTimer","reset","noOfRows","setNoOfRows","allDices","setAllDices","_useState5","_useState6","setNoOfRolls","_useState7","_useState8","isSettingsVisible","setIsSettingsVisible","_useState9","_useState10","isScoresVisible","setIsScoresVisible","_useState11","_useState12","missedRolls","setMissedRolls","_useState13","_useState14","missedDices","setMissedDices","leftConfettiRef","rightConfettiRef","getSelectedDices","die","selectedDices","resetNoOfRolls","CheckIfAllDicesAreTheSame","startConfettis","useUpdateEffect","calculateNoOfRows","onPress_NewGame_or_Roll","onPressNewGame","onPressRoll","oldNoOfRolls","foundUnselected","t","oldDice","allSelected","every","firstValue","allSame","Dimensions","useHotkeys","onLayout","l","nativeEvent","layout","isRunningOnMobileDevice","diceElements","_allDices$filter","firstSelectedDice","oldDices","onPressDie","GetDiceElements","dices","minWidth","GameButton","ConfettiCannon","count","origin","x","y","autoStart","ref","onAnimationEnd","fadeOut","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ScoresModal","SettingsModal","theme","DefaultTheme","colors","primary","accent","SplashScreen","isGlobalStateLoaded","setIsGlobalStateLoaded","_useFonts","useFonts","_defineProperty","fontsLoaded","PaperProvider","Main","StatusBar","Image","source","resizeMode","registerRootComponent","App","URL","process","href","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","mode","this","ns","create","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}