{"version":3,"file":"static/js/main.fc4be535.js","mappings":"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","sources":["src/common/GlobalState.js","src/common/Utils.js","src/common/ScoreUtils.js","src/common/Const.js","src/common/CustomHooks.js","src/components/Dice.jsx","src/components/Separator.jsx","src/ScoresModal.jsx","src/SettingsModal.jsx","src/Main.jsx","App.jsx","main.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createGlobalState } from \"react-hooks-global-state\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const DiceTypes = [\"Digit\", \"Symbol\"];\n\nconst initialState = {\n  noOfDices: 12,\n  soundEnabled: true,\n  diceType: DiceTypes[0],\n};\n\nconst CACHED_STATE = \"CACHED_STATE\";\n\nconst { useGlobalState, getGlobalState, setGlobalState } =\n  createGlobalState(initialState);\n\n//#region - Cachable Global State\n\nexport const SetNoOfDices = (value) => {\n  setGlobalState(\"noOfDices\", (v) => value);\n  CacheStateLocally();\n};\n\nexport const SetSoundEnabled = (value) => {\n  setGlobalState(\"soundEnabled\", (v) => value);\n  CacheStateLocally();\n};\n\nexport const SetDiceType = (value) => {\n  setGlobalState(\"diceType\", (v) => value);\n  CacheStateLocally();\n};\n\n//#endregion\n\n//#region - Persisting Global State\n\nconst CacheStateLocally = async () => {\n  let cacheableState = {\n    noOfDices: getGlobalState(\"noOfDices\"),\n    soundEnabled: getGlobalState(\"soundEnabled\"),\n    diceType: getGlobalState(\"diceType\"),\n  };\n  cacheableState = JSON.stringify(cacheableState);\n  await AsyncStorage.setItem(CACHED_STATE, cacheableState);\n};\n\nexport const LoadLocallyCachedState = async () => {\n  let currentState = { ...initialState };\n  const stateKeys = Object.keys(initialState);\n  const strLocallyCachedState = await AsyncStorage.getItem(CACHED_STATE);\n  const locallyCachedState = JSON.parse(strLocallyCachedState);\n  if (locallyCachedState !== null || locallyCachedState !== undefined) {\n    currentState = { ...currentState, ...locallyCachedState };\n  }\n\n  for (const key of stateKeys) setGlobalState(key, (v) => currentState[key]);\n\n  return true;\n};\n\n//#endregion\n\nexport { useGlobalState, getGlobalState, setGlobalState };\n","import { Platform } from \"react-native\";\nimport { Audio } from \"expo-av\";\n\nimport { getGlobalState } from \"./GlobalState\";\n\nexport default class Utils {\n  static SplitArray = (flatArray, numCols) => {\n    const newArray = [];\n    for (let c = 0; c < numCols; c++) {\n      newArray.push([]);\n    }\n    for (let i = 0; i < flatArray.length; i++) {\n      const mod = i % numCols;\n      newArray[mod].push(flatArray[i]);\n    }\n    return newArray;\n  };\n\n  static Sleep = (seconds = 1) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, seconds * 1000);\n    });\n  };\n\n  static PlaySound = async (audio) => {\n    try {\n      const soundEnabled = getGlobalState(\"soundEnabled\");\n      if (!soundEnabled) return;\n      const { sound } = await Audio.Sound.createAsync(audio);\n      await sound.playAsync();\n    } catch {}\n  };\n\n  static IsOnWeb = () => Platform.OS === \"web\";\n\n  //#region\n  static GetTimerText = ({ tHours, tMinutes, tSeconds }) => {\n    const twoDigitNumber = (n) => (\"0\" + n).slice(-2);\n    let formattedTime =\n      twoDigitNumber(tMinutes) + \":\" + twoDigitNumber(tSeconds);\n    if (tHours > 0) {\n      formattedTime = twoDigitNumber(tHours) + \":\" + formattedTime;\n    }\n    return formattedTime;\n  };\n\n  static GetTotalSecondsOfTimer = ({ tHours, tMinutes, tSeconds }) => {\n    const hSeconds = Number(tHours) * 3600;\n    const mSeconds = Number(tMinutes) * 60;\n    const sSeconds = Number(tSeconds);\n    const totalSeconds = hSeconds + mSeconds + sSeconds;\n    return totalSeconds;\n  };\n  //#endregion\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport \"react-native-get-random-values\";\nimport { nanoid } from \"nanoid\";\nimport Utils from \"./Utils\";\n\nconst SCORE_STORAGE_KEY = \"SCORES\";\n\nexport default class ScoreUtils {\n  static GetAllScores = async () => {\n    let strScores = await AsyncStorage.getItem(SCORE_STORAGE_KEY);\n    if (!strScores) strScores = \"[]\";\n    return JSON.parse(strScores);\n  };\n\n  static AddNewScore = async (\n    time,\n    noOfRolls,\n    selectedDice,\n    diceType,\n    noOfDices\n  ) => {\n    const scoreObj = {\n      id: nanoid(),\n      time,\n      noOfRolls,\n      selectedDice,\n      totalSeconds: Utils.GetTotalSecondsOfTimer(time),\n      diceType,\n      noOfDices,\n    };\n    const allScores = await ScoreUtils.GetAllScores();\n    allScores.push(scoreObj);\n    await ScoreUtils.SaveScores(allScores);\n  };\n\n  static DeleteScore = async (scoreObj) => {\n    const allScores = await ScoreUtils.GetAllScores();\n    const newScores = allScores.filter(({ id }) => id !== scoreObj.id);\n    await ScoreUtils.SaveScores(newScores);\n  };\n\n  static ClearAllScores = async () => {\n    await ScoreUtils.SaveScores([]);\n  };\n\n  static SaveScores = async (arrScores) => {\n    const strScores = JSON.stringify(arrScores);\n    await AsyncStorage.setItem(SCORE_STORAGE_KEY, strScores);\n  };\n}\n","export const Colors = {\n  Primary: \"#F1C232\",\n  Accent: \"#596183\",\n  Highlight: \"#F29432\",\n  ButtonBG: \"#0A2038\",\n};\n\nexport const Sounds = {\n  Roll_Dice: require(\"../../assets/Sounds/Roll_Dice.mp3\"),\n  Dice_Click: require(\"../../assets/Sounds/Dice_Click.wav\"),\n  Game_Finished: require(\"../../assets/Sounds/Game_Finished.wav\"),\n};\n\nexport const Images = {\n  Splash: require(\"../../assets/splash.png\"),\n};\n","import { useEffect, useRef } from \"react\";\n\nconst useUpdateEffect = (effect, dependencies = []) => {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      return effect();\n    }\n  }, dependencies);\n};\n\nexport default useUpdateEffect;\n","import { View } from \"react-native\";\nimport { Text, TouchableRipple } from \"react-native-paper\";\n\nimport { Colors } from \"../common/Const\";\nimport { DiceTypes } from \"../common/GlobalState\";\n\nconst Dice = ({ title, isSelected, onPress, isCompact, diceType }) => {\n  const diceSize = isCompact ? 40 : 70;\n  return (\n    <View style={{ overflow: \"hidden\", borderRadius: 12 }}>\n      <TouchableRipple\n        onPress={onPress}\n        style={{\n          borderRadius: 12,\n          backgroundColor: isSelected ? Colors.Highlight : \"white\",\n          borderColor: Colors.Highlight,\n          borderWidth: 3,\n          height: diceSize,\n          width: diceSize,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {diceType === DiceTypes[0] ? (\n          <DiceDigit title={title} isCompact={isCompact} />\n        ) : (\n          <DiceSymbol title={title} isCompact={isCompact} />\n        )}\n      </TouchableRipple>\n    </View>\n  );\n};\n\nconst DiceDigit = ({ title, isCompact }) => {\n  const diceFontSize = isCompact ? 25 : 45;\n  return (\n    <Text style={{ fontSize: diceFontSize, fontWeight: \"bold\" }} selectable={false}>{title}</Text>\n  );\n};\n\nconst DiceSymbol = ({ title, isCompact }) => {\n  const dotSize = isCompact ? 8 : 15;\n\n  const one = <DiceDot dotSize={dotSize} />;\n  const two = (\n    <>\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", top: 0, left: 0 }}\n      />\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", bottom: 0, right: 0 }}\n      />\n    </>\n  );\n  const two_mirror = (\n    <>\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", top: 0, right: 0 }}\n      />\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", bottom: 0, left: 0 }}\n      />\n    </>\n  );\n  const two_middle = (\n    <>\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", right: 0 }}\n      />\n      <DiceDot\n        dotSize={dotSize}\n        style={{ position: \"absolute\", left: 0 }}\n      />\n    </>\n  )\n  const three = (\n    <>\n      {one}\n      {two}\n    </>\n  );\n  const four = (\n    <>\n      {two}\n      {two_mirror}\n    </>\n  )\n  const five = (\n    <>\n      {one}\n      {four}\n    </>\n  )\n  const six = (\n    <>\n      {four}\n      {two_middle}\n    </>\n  )\n\n  return (\n    <View\n      style={{\n        height: \"90%\",\n        width: \"90%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {title === \"1\" && one}\n      {title === \"2\" && two}\n      {title === \"3\" && three}\n      {title === \"4\" && four}\n      {title === \"5\" && five}\n      {title === \"6\" && six}\n    </View>\n  );\n};\n\nconst DiceDot = ({ dotSize, style }) => (\n  <View\n    style={{\n      borderRadius: dotSize / 2,\n      height: dotSize,\n      width: dotSize,\n      backgroundColor: Colors.ButtonBG,\n      ...style,\n    }}\n  />\n);\n\nexport default Dice;\n","import { Divider } from \"react-native-paper\";\n\nconst Separator = () => (\n  <Divider\n    style={{ marginVertical: 12, backgroundColor: \"rgba(0,0,0,0.12)\" }}\n  />\n);\n\nexport default Separator;\n","import { useEffect, useState } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport {\n  Dialog,\n  Portal,\n  Text,\n  Title,\n  TouchableRipple,\n} from \"react-native-paper\";\nimport SegmentedControlTab from \"react-native-segmented-control-tab\";\n\nimport Dice from \"./components/Dice\";\nimport Separator from \"./components/Separator\";\n\nimport Utils from \"./common/Utils\";\nimport { Colors } from \"./common/Const\";\nimport ScoreUtils from \"./common/ScoreUtils\";\nimport { useGlobalState } from \"./common/GlobalState\";\n\nconst arrNoOfDices = [4, 6, 8, 10, 12];\n\nconst ScoresModal = ({ isVisible, onDismiss }) => {\n  const [diceType] = useGlobalState(\"diceType\");\n\n  const [scores, setScores] = useState([]);\n  const [selectedNoOfDices, setSelectedNoOfDices] = useState(\n    arrNoOfDices[arrNoOfDices.length - 1]\n  );\n\n  useEffect(() => {\n    if (isVisible) {\n      loadScores();\n    }\n  }, [isVisible]);\n\n  const loadScores = async () => {\n    const s = await ScoreUtils.GetAllScores();\n    const sortedScores = s.sort((a, b) => a.totalSeconds - b.totalSeconds);\n    setScores(sortedScores);\n  };\n\n  const onPressClearScoreboard = async () => {\n    await ScoreUtils.ClearAllScores();\n    await loadScores();\n  };\n\n  return (\n    <Portal>\n      <Dialog\n        visible={isVisible}\n        onDismiss={onDismiss}\n        style={{\n          maxWidth: 470,\n          maxHeight: 680,\n          width: \"92%\",\n          alignSelf: \"center\",\n          backgroundColor: Colors.Primary,\n        }}\n      >\n        <Dialog.ScrollArea style={{ borderColor: \"transparent\" }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Title\n              style={{\n                flex: 1,\n                fontSize: 26,\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n              }}\n            >\n              Scoreboard\n            </Title>\n          </View>\n          <Separator />\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Dice title={\"5\"} isCompact diceType={diceType} />\n            <View style={{ flex: 1, marginHorizontal: 4 }}>\n              <SegmentedControlTab\n                values={arrNoOfDices.map((v) => `${v}`)}\n                selectedIndex={arrNoOfDices.indexOf(selectedNoOfDices)}\n                onTabPress={(i) => setSelectedNoOfDices(arrNoOfDices[i])}\n                borderRadius={12}\n                tabStyle={{ borderWidth: 3, borderColor: Colors.Highlight }}\n                activeTabStyle={{ backgroundColor: Colors.ButtonBG }}\n                tabTextStyle={{\n                  color: Colors.ButtonBG,\n                  fontWeight: \"bold\",\n                  fontSize: 20,\n                }}\n              />\n            </View>\n            <Dice title={\"5\"} isCompact diceType={diceType} />\n          </View>\n          <FlatList\n            data={scores.filter(\n              ({ noOfDices }) => noOfDices === selectedNoOfDices\n            )}\n            renderItem={({ item, index }) => (\n              <ScoreItem scoreObj={item} index={index} />\n            )}\n            keyExtractor={({ id }) => id}\n            ListHeaderComponent={() => (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  marginVertical: 4,\n                  borderRadius: 12,\n                  borderWidth: 3,\n                  borderColor: Colors.ButtonBG,\n                  padding: 2,\n                }}\n              >\n                <ScoreItemText v={\"#\"} halfWidth />\n                <ScoreItemText v={\"Time\"} />\n                <ScoreItemText v={\"Rolls\"} />\n                <ScoreItemText v={\"Dice\"} />\n              </View>\n            )}\n          />\n        </Dialog.ScrollArea>\n        <Dialog.Actions>\n          <View\n            style={{\n              overflow: \"hidden\",\n              borderRadius: 12,\n              width: \"100%\",\n              maxWidth: 615,\n              alignSelf: \"center\",\n            }}\n          >\n            <TouchableRipple\n              style={{\n                borderRadius: 12,\n                backgroundColor: Colors.ButtonBG,\n                height: 46,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={onPressClearScoreboard}\n            >\n              <Text\n                style={{ color: \"white\", fontSize: 22, fontWeight: \"bold\" }}\n              >\n                Clear Scoreboard\n              </Text>\n            </TouchableRipple>\n          </View>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst ScoreItem = ({ scoreObj, index }) => {\n  const { id, time, noOfRolls, selectedDice, diceType } = scoreObj;\n  const timeTaken = Utils.GetTimerText(time);\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginVertical: 4,\n        borderRadius: 12,\n        borderWidth: 3,\n        borderColor: Colors.ButtonBG,\n        padding: 2,\n      }}\n    >\n      <ScoreItemText v={index + 1} halfWidth />\n      <ScoreItemText v={timeTaken} />\n      <ScoreItemText v={noOfRolls} />\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <Dice diceType={diceType} isCompact title={selectedDice} />\n      </View>\n    </View>\n  );\n};\n\nconst ScoreItemText = ({ v, halfWidth = false }) => (\n  <Text\n    style={{\n      flex: halfWidth ? 0.5 : 1,\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      fontSize: 22,\n      marginHorizontal: 1,\n    }}\n  >\n    {v}\n  </Text>\n);\n\nexport default ScoresModal;\n","import { View } from \"react-native\";\nimport {\n  Dialog,\n  IconButton,\n  Portal,\n  Text,\n  Title,\n} from \"react-native-paper\";\nimport SegmentedControlTab from \"react-native-segmented-control-tab\";\n\nimport Dice from \"./components/Dice\";\nimport Separator from \"./components/Separator\";\n\nimport { Colors } from \"./common/Const\";\nimport {\n  DiceTypes,\n  useGlobalState,\n  SetNoOfDices,\n  SetDiceType,\n  SetSoundEnabled,\n} from \"./common/GlobalState\";\n\nconst SettingsModal = ({ isVisible, onDismiss }) => {\n  const [noOfDices] = useGlobalState(\"noOfDices\");\n  const [diceType] = useGlobalState(\"diceType\");\n  const [soundEnabled] = useGlobalState(\"soundEnabled\");\n\n  const decreaseNoOfDices = () => {\n    if (noOfDices > 4) {\n      SetNoOfDices(noOfDices - 2);\n    }\n  };\n\n  const increaseNoOfDices = () => {\n    if (noOfDices < 12) {\n      SetNoOfDices(noOfDices + 2);\n    }\n  };\n\n  return (\n    <Portal>\n      <Dialog\n        visible={isVisible}\n        onDismiss={onDismiss}\n        style={{\n          maxWidth: 470,\n          width: \"85%\",\n          alignSelf: \"center\",\n          backgroundColor: Colors.Primary,\n        }}\n      >\n        <Dialog.Content>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Title\n              style={{\n                flex: 1,\n                fontSize: 26,\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n                marginBottom: 12\n              }}\n            >\n              Settings\n            </Title>\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ flex: 1, fontSize: 21, fontWeight: \"bold\" }}>\n              Dice Type\n            </Text>\n            {DiceTypes.map((dT, i) => (\n              <View key={dT} style={{ flexDirection: \"row\", }}>\n                <Dice\n                  title={\"5\"}\n                  isSelected={diceType === dT}\n                  onPress={() => SetDiceType(dT)}\n                  isCompact\n                  diceType={dT}\n                />\n                {i !== DiceTypes.length - 1 && (\n                  <View style={{ width: 12 }} />\n                )}\n              </View>\n            ))}\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 21, fontWeight: \"bold\" }}>Sound</Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n              <SegmentedControlTab\n                values={[\"On\", \"Off\"]}\n                selectedIndex={soundEnabled ? 0 : 1}\n                onTabPress={(i) => SetSoundEnabled(i === 0)}\n                borderRadius={12}\n                tabStyle={{ borderWidth: 3, borderColor: Colors.Highlight }}\n                tabsContainerStyle={{ width: 92 }}\n                activeTabStyle={{ backgroundColor: Colors.ButtonBG }}\n                tabTextStyle={{\n                  color: Colors.ButtonBG,\n                  fontWeight: \"bold\",\n                  fontSize: 20,\n                }}\n              />\n            </View>\n          </View>\n          <Separator />\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 21, fontWeight: \"bold\" }}>\n              No. of Dices\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n              <View\n                style={{\n                  borderWidth: 3,\n                  borderColor: Colors.Highlight,\n                  borderRadius: 12,\n                  backgroundColor: \"white\",\n                  flexDirection: \"row\",\n                  width: 92,\n                  height: 42,\n                  alignItems: \"center\",\n                  overflow: \"hidden\",\n                }}\n              >\n                <StepperButton icon={\"minus\"} onPress={decreaseNoOfDices} />\n                <Text\n                  style={{\n                    flex: 1,\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    fontSize: 20,\n                  }}\n                >\n                  {noOfDices}\n                </Text>\n                <StepperButton icon={\"plus\"} onPress={increaseNoOfDices} />\n              </View>\n            </View>\n          </View>\n        </Dialog.Content>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default SettingsModal;\n\nconst StepperButton = ({ icon, onPress }) => (\n  <View\n    style={{\n      flex: 1,\n      backgroundColor: Colors.ButtonBG,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n    }}\n  >\n    <IconButton\n      icon={icon}\n      size={28}\n      onPress={onPress}\n      style={{ margin: 0 }}\n      iconColor={Colors.Highlight}\n    />\n  </View>\n);","import { useState, useRef, useEffect } from \"react\";\nimport { View, Dimensions } from \"react-native\";\nimport { IconButton, Text, TouchableRipple } from \"react-native-paper\";\nimport ConfettiCannon from \"react-native-confetti-cannon\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport \"react-native-get-random-values\";\nimport { nanoid } from \"nanoid\";\n\nimport Utils from \"./common/Utils\";\nimport ScoreUtils from \"./common/ScoreUtils\";\nimport { Colors, Sounds } from \"./common/Const\";\nimport useUpdateEffect from \"./common/CustomHooks\";\nimport { useGlobalState } from \"./common/GlobalState\";\n\nimport Dice from \"./components/Dice\";\nimport ScoresModal from \"./ScoresModal\";\nimport SettingsModal from \"./SettingsModal\";\n\n//TODO: expo-fonts to be integrated\n//TODO: Save noOfDices in the Score and display noOfDice-wise scores in ScoreModal\n//TODO: Show missed rolls (where selected number was there but user Rolled-away)\n\nconst Main = () => {\n  const [diceType] = useGlobalState(\"diceType\");\n  const [noOfDices] = useGlobalState(\"noOfDices\");\n\n  const CreateDice = () => ({\n    title: `${Math.ceil(Math.random() * 6)}`,\n    isSelected: false,\n    id: nanoid(),\n  });\n\n  const GenerateNewDices = () => [...Array(noOfDices)].map(() => CreateDice());\n\n  const {\n    seconds: tSeconds,\n    minutes: tMinutes,\n    hours: tHours,\n    start: startTimer,\n    pause: pauseTimer,\n    reset: resetTimer,\n  } = useStopwatch({});\n\n  const [noOfRows, setNoOfRows] = useState(2);\n  const [allDices, setAllDices] = useState(GenerateNewDices());\n  const [noOfRolls, setNoOfRolls] = useState(0);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [isScoresVisible, setIsScoresVisible] = useState(false);\n\n  const leftConfettiRef = useRef();\n  const rightConfettiRef = useRef();\n\n  const getSelectedDices = () => allDices.filter((die) => die.isSelected);\n\n  useEffect(() => {\n    const selectedDices = getSelectedDices();\n    if (selectedDices.length === 0) {\n      resetNoOfRolls();\n      resetTimer();\n      pauseTimer();\n    } else if (selectedDices.length === 1) {\n      resetTimer();\n      startTimer();\n    } else if (CheckIfAllDicesAreTheSame()) {\n      Utils.PlaySound(Sounds.Game_Finished);\n      startConfettis();\n      pauseTimer();\n      ScoreUtils.AddNewScore(\n        { tHours, tMinutes, tSeconds },\n        noOfRolls,\n        selectedDices[0].title,\n        diceType,\n        noOfDices\n      );\n    }\n  }, [allDices]);\n\n  useUpdateEffect(() => {\n    setAllDices(GenerateNewDices());\n    pauseTimer();\n    resetTimer();\n    calculateNoOfRows();\n  }, [noOfDices]);\n\n  const increaseNoOfRolls = () => {\n    setNoOfRolls((oldNoOfRolls) => oldNoOfRolls + 1);\n  };\n\n  const resetNoOfRolls = () => setNoOfRolls(0);\n\n  const startConfettis = () => {\n    leftConfettiRef.current.start();\n    rightConfettiRef.current.start();\n  };\n\n  const onPress_NewGame_or_Roll = () => {\n    CheckIfAllDicesAreTheSame() ? onPressNewGame() : onPressRoll();\n  };\n\n  const onPressRoll = () => {\n    Utils.PlaySound(Sounds.Roll_Dice);\n    const selectedDices = getSelectedDices();\n    if (selectedDices.length > 0) {\n      increaseNoOfRolls();\n    }\n    setAllDices((oldDice) =>\n      oldDice.map((die) => (die.isSelected ? die : CreateDice()))\n    );\n  };\n\n  const onPressNewGame = () => {\n    setAllDices(GenerateNewDices());\n    resetTimer();\n  };\n\n  const onPressDie = ({ id, title }) => {\n    if (CheckIfAllDicesAreTheSame()) return;\n    Utils.PlaySound(Sounds.Dice_Click);\n    const [firstSelectedDice] = allDices.filter(({ isSelected }) => isSelected);\n    if (firstSelectedDice) {\n      if (title !== firstSelectedDice.title) return;\n    }\n    setAllDices((oldDices) =>\n      oldDices.map((die) =>\n        die.id === id ? { ...die, isSelected: !die.isSelected } : die\n      )\n    );\n  };\n\n  const CheckIfAllDicesAreTheSame = () => {\n    const allSelected = allDices.every((die) => die.isSelected);\n    const firstValue = allDices[0].title;\n    const allSame = allDices.every((die) => die.title === firstValue);\n    return allSelected && allSame;\n  };\n\n  const GetDiceElements = () => {\n    const diceElements = allDices.map(({ id, title, isSelected }, index) => (\n      <Dice\n        key={id}\n        title={title}\n        isSelected={isSelected}\n        onPress={() => onPressDie(allDices[index])}\n        diceType={diceType}\n      />\n    ));\n\n    let splittedArrays = [];\n    if (Utils.IsOnWeb()) {\n      splittedArrays = Utils.SplitArray(diceElements, 2);\n    } else {\n      splittedArrays = Utils.SplitArray(diceElements, 4);\n    }\n    splittedArrays = Utils.SplitArray(diceElements, noOfRows);\n    return splittedArrays;\n  };\n\n  const onLayoutRootView = (l) => {\n    const { width } = l.nativeEvent.layout;\n    calculateNoOfRows(width);\n  };\n\n  const calculateNoOfRows = (width = Dimensions.get(\"window\").width) => {\n    if (noOfDices === 10) {\n      if (width <= 480) {\n        setNoOfRows(5);\n      } else {\n        setNoOfRows(2);\n      }\n      return;\n    }\n    if (noOfDices === 4 || noOfDices === 6) {\n      setNoOfRows(2);\n    } else if (width <= 480) {\n      setNoOfRows(4);\n    } else if (width > 720) {\n      setNoOfRows(2);\n    }\n  };\n\n  //Rolls count does not work if we use SpaceBar to roll the dices.\n  // if (Utils.IsOnWeb()) {\n  //   const { useHotkeys } = require(\"react-hotkeys-hook\");\n  //   useHotkeys(\"space\", onPress_NewGame_or_Roll);\n  // }\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: Colors.Primary,\n      }}\n      onLayout={onLayoutRootView}\n    >\n      <View\n        style={{\n          justifyContent: \"center\",\n          width: \"90%\",\n        }}\n      >\n        <View style={{ margin: 12, alignItems: \"center\" }}>\n          <Text\n            style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: 50 }}\n          >\n            Tenzies\n          </Text>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n              fontSize: 20,\n              marginTop: 8,\n            }}\n          >\n            Roll until all dice are the same.{\"\\n\"}Click each die to freeze it\n            at its current value between rolls.\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 12,\n              width: \"100%\",\n              maxWidth: 480,\n            }}\n          >\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 28,\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {Utils.GetTimerText({ tHours, tMinutes, tSeconds })}\n            </Text>\n            <Text\n              style={{\n                flex: 1,\n                fontSize: 28,\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {noOfRolls} Rolls\n            </Text>\n          </View>\n        </View>\n\n        <View style={{ alignItems: \"center\" }}>\n          {GetDiceElements().map((dices, i) => (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n                marginVertical: 8,\n                minWidth: Utils.IsOnWeb() ? 400 : \"100%\",\n                maxWidth: 650,\n                width: \"100%\",\n              }}\n              key={`${i}`}\n            >\n              {dices}\n            </View>\n          ))}\n        </View>\n\n        <View\n          style={{\n            overflow: \"hidden\",\n            borderRadius: 12,\n            marginTop: 20,\n            width: \"100%\",\n            maxWidth: 615,\n            alignSelf: \"center\",\n          }}\n        >\n          <TouchableRipple\n            style={{\n              borderRadius: 12,\n              backgroundColor: Colors.ButtonBG,\n              height: 60,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={onPress_NewGame_or_Roll}\n          >\n            <Text style={{ color: \"white\", fontSize: 30, fontWeight: \"bold\" }} selectable={false}>\n              {CheckIfAllDicesAreTheSame() ? \"New Game\" : \"ROLL\"}\n            </Text>\n          </TouchableRipple>\n        </View>\n      </View>\n      {CheckIfAllDicesAreTheSame() && (\n        <>\n          <ConfettiCannon\n            count={50}\n            origin={{ x: 100, y: 100 }}\n            autoStart={true}\n            ref={leftConfettiRef}\n            onAnimationEnd={startConfettis}\n            fadeOut={true}\n          />\n          <ConfettiCannon\n            count={50}\n            origin={{ x: Dimensions.get(\"window\").width - 100, y: 100 }}\n            autoStart={true}\n            ref={rightConfettiRef}\n            onAnimationEnd={startConfettis}\n            fadeOut={true}\n          />\n        </>\n      )}\n      <View\n        style={{\n          position: \"absolute\",\n          top: 38,\n          right: 0,\n          backgroundColor: Colors.Highlight,\n          borderTopLeftRadius: 12,\n          borderBottomLeftRadius: 12,\n          overflow: \"hidden\",\n        }}\n      >\n        <IconButton\n          icon={\"cog\"}\n          iconColor={Colors.ButtonBG}\n          style={{ margin: 0, marginRight: 12 }}\n          size={30}\n          onPress={() => setIsSettingsVisible(true)}\n        />\n      </View>\n      <View\n        style={{\n          position: \"absolute\",\n          top: 38,\n          left: 0,\n          backgroundColor: Colors.Highlight,\n          borderTopRightRadius: 12,\n          borderBottomRightRadius: 12,\n          overflow: \"hidden\",\n        }}\n      >\n        <IconButton\n          icon={\"trophy\"}\n          iconColor={Colors.ButtonBG}\n          style={{ margin: 0, marginLeft: 12 }}\n          size={30}\n          onPress={() => setIsScoresVisible(true)}\n        />\n      </View>\n      <ScoresModal\n        isVisible={isScoresVisible}\n        onDismiss={() => setIsScoresVisible(false)}\n      />\n      <SettingsModal\n        isVisible={isSettingsVisible}\n        onDismiss={() => setIsSettingsVisible(false)}\n      />\n    </View>\n  );\n};\n\nexport default Main;\n","import { useEffect, useState } from \"react\";\nimport { View, Image } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\nimport * as SplashScreen from \"expo-splash-screen\";\n\nimport Main from \"./src/Main\";\nimport Utils from \"./src/common/Utils\";\nimport { Colors, Images } from \"./src/common/Const\";\nimport { LoadLocallyCachedState } from \"./src/common/GlobalState\";\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: Colors.Primary,\n    accent: Colors.Accent,\n  },\n};\n\nconst App = () => {\n  const [isGlobalStateLoaded, setIsGlobalStateLoaded] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      await SplashScreen.preventAutoHideAsync();\n      await LoadLocallyCachedState();\n      await Utils.Sleep(2);\n      setIsGlobalStateLoaded(true)\n      await SplashScreen.hideAsync();\n    })()\n  }, [])\n\n  if (!isGlobalStateLoaded)\n    return (\n      <View style={{ flex: 1, backgroundColor: Colors.Primary }}>\n        <Image\n          source={Images.Splash}\n          style={{ height: \"100%\", width: \"100%\" }}\n          resizeMode={\"contain\"}\n        />\n      </View>\n    );\n\n  return (\n    <PaperProvider theme={theme}>\n      <Main />\n      <StatusBar style=\"auto\" />\n    </PaperProvider>\n  )\n};\n\nexport default App;\n","import { registerRootComponent } from \"expo\";\n\nimport App from \"./App\";\n\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [961], () => (__webpack_require__(9748)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["DiceTypes","initialState","noOfDices","soundEnabled","diceType","CACHED_STATE","_createGlobalState","createGlobalState","useGlobalState","getGlobalState","setGlobalState","SetNoOfDices","value","v","CacheStateLocally","_ref","_asyncToGenerator","cacheableState","JSON","stringify","AsyncStorage","apply","arguments","LoadLocallyCachedState","_ref2","currentState","_objectSpread","stateKeys","Object","keys","strLocallyCachedState","locallyCachedState","parse","undefined","_loop","key","Utils","_createClass","_classCallCheck","SplitArray","flatArray","numCols","newArray","c","push","i","length","Sleep","seconds","Promise","resolve","reject","setTimeout","PlaySound","audio","sound","Audio","playAsync","_unused","_x","IsOnWeb","Platform","GetTimerText","tHours","tMinutes","tSeconds","twoDigitNumber","n","slice","formattedTime","GetTotalSecondsOfTimer","_ref3","Number","SCORE_STORAGE_KEY","ScoreUtils","GetAllScores","strScores","AddNewScore","time","noOfRolls","selectedDice","scoreObj","id","nanoid","totalSeconds","allScores","SaveScores","_x2","_x3","_x4","_x5","DeleteScore","newScores","filter","_ref4","_x6","ClearAllScores","_ref6","arrScores","_x7","Colors","Sounds","Roll_Dice","require","Dice_Click","Game_Finished","Images","Splash","effect","dependencies","isInitialMount","useRef","useEffect","current","DiceDigit","title","diceFontSize","isCompact","_jsx","Text","style","fontSize","fontWeight","selectable","children","DiceSymbol","dotSize","one","DiceDot","two","_jsxs","_Fragment","position","top","left","bottom","right","two_mirror","two_middle","three","four","five","six","View","height","width","justifyContent","alignItems","borderRadius","backgroundColor","isSelected","onPress","diceSize","overflow","TouchableRipple","borderColor","borderWidth","Divider","marginVertical","arrNoOfDices","ScoreItem","_ref7","index","timeTaken","flexDirection","padding","ScoreItemText","halfWidth","flex","Dice","_ref8","_ref8$halfWidth","textAlign","marginHorizontal","isVisible","onDismiss","_useGlobalState","_slicedToArray","_useState","useState","_useState2","scores","setScores","_useState3","_useState4","selectedNoOfDices","setSelectedNoOfDices","loadScores","sortedScores","sort","a","b","onPressClearScoreboard","Portal","Dialog","visible","maxWidth","maxHeight","alignSelf","Title","Separator","SegmentedControlTab","values","map","selectedIndex","indexOf","onTabPress","tabStyle","activeTabStyle","tabTextStyle","color","FlatList","data","renderItem","_ref5","item","keyExtractor","ListHeaderComponent","_useGlobalState3","_useGlobalState5","marginBottom","dT","tabsContainerStyle","StepperButton","icon","IconButton","size","margin","iconColor","CreateDice","Math","ceil","random","GenerateNewDices","_toConsumableArray","Array","_useStopwatch","useStopwatch","minutes","hours","startTimer","start","pauseTimer","pause","resetTimer","reset","noOfRows","setNoOfRows","allDices","setAllDices","_useState5","_useState6","setNoOfRolls","_useState7","_useState8","isSettingsVisible","setIsSettingsVisible","_useState9","_useState10","isScoresVisible","setIsScoresVisible","leftConfettiRef","rightConfettiRef","getSelectedDices","die","selectedDices","resetNoOfRolls","CheckIfAllDicesAreTheSame","startConfettis","useUpdateEffect","calculateNoOfRows","onPressRoll","oldNoOfRolls","oldDice","onPressNewGame","allSelected","every","firstValue","allSame","Dimensions","onLayout","l","nativeEvent","layout","marginTop","diceElements","_allDices$filter","firstSelectedDice","oldDices","onPressDie","GetDiceElements","dices","minWidth","ConfettiCannon","count","origin","x","y","autoStart","ref","onAnimationEnd","fadeOut","borderTopLeftRadius","borderBottomLeftRadius","marginRight","borderTopRightRadius","borderBottomRightRadius","marginLeft","ScoresModal","SettingsModal","theme","DefaultTheme","colors","primary","accent","isGlobalStateLoaded","setIsGlobalStateLoaded","SplashScreen","PaperProvider","Main","StatusBar","Image","source","resizeMode","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}